<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professional Weather Forecast</title>
    <link rel="stylesheet" href="mausam.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <div class="content-frame">
    <header>
        <div class="container">
            <h1><i class="fas fa-cloud-sun"></i>MAUSAM</h1>
            <p style="font-size: medium; ">mausam:your daily weather guide</p>
        </div>
    </header>
</div>
    <main>
        <div class="container">
            <div class="input-box">
                <input type="text" id="cityInput" placeholder="Enter city name">
                <button onclick="getWeather()">Get Weather</button>
            </div>
            <div id="weatherContainer"></div>
            <canvas id="tempChart" width="400" height="150"></canvas>
        </div>
    </main>


    <footer>
        <p>&copy; 2024 Weather Pro. All rights reserved.</p>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="mausam.js"></script>
</body>
</html>









/* Global Styles */
body {
    margin: 0;
    font-family: 'Arial', sans-serif;
    background-color: #ccc;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

header {

    height: 100px;;
    width: 100%;
    padding: 30px 0;
    text-align: center;
    animation: fadeIn 1.2s ease;
}
.content-frame {
    background-color:whitesmoke;
    border-radius: 15px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    margin: 20px auto;
    max-width: 500px;
    padding: 10px;
    width: 50%;
    animation: fadeIn 1s ease;
}
header h1 {
    margin: 0;
}

header p {
    font-size: 1.2rem;
    margin-top: 10px;
}

main {
    padding: 20px 0;
}

.input-box {
    display: flex;
    justify-content: center;
    margin-bottom: 20px;
}

input {
    padding: 15px;
    font-size: 18px;
    width: 300px;
    border: 1px solid #ccc;
    border-radius: 5px 0 0 5px;
    outline: none;
}

button {
    padding: 15px;
    font-size: 18px;
    background-color:black;
    color: white;
    border: none;
    border-radius: 0 5px 5px 0;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

button:hover {
    background-color: darkcyan;
}

/* Weather Display */
#weatherContainer {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    animation: slideIn 0.8s ease;
}

.weather-item {
    background-color: white;
    border: 1px solid #ddd;
    border-radius: 10px;
    margin: 15px;
    padding: 20px;
    text-align: center;
    width: 200px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
}

.weather-item:hover {
    transform: translateY(-10px);
}

.weather-item h2 {
    margin-bottom: 10px;
    font-size: 18px;
}

.weather-item p {
    margin: 5px 0;
    font-size: 16px;
}

.weather-icon {
    font-size: 30px;
    margin-bottom: 10px;
    color: #f39c12;
}

/* Chart Styling */
#tempChart {
    margin-top: 50px;
}

/* Animations */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes slideIn {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}












// mausam.js
async function getWeather() {
    const city = document.getElementById("cityInput").value;
    if (!city) {
        alert("Please enter a city name.");
        return;
    }

    try {
        const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=231147d974293484ef44dde8774140d8&units=metric`);
        const data = await response.json();

        // Check if city is found
        if (data.cod !== "200") {
            document.getElementById("weatherContainer").innerHTML = `<p>City not found. Please try again.</p>`;
            return;
        }

        // Display data in weatherContainer
        document.getElementById("weatherContainer").innerHTML = `
            <h2>Weather in ${data.city.name}</h2>
            <p>Temperature: ${data.list[0].main.temp} °C</p>
            <p>Condition: ${data.list[0].weather[0].description}</p>
        `;

        // Prepare data for the chart
        const labels = data.list.slice(0, 5).map(item => item.dt_txt.split(" ")[1]);
        const temps = data.list.slice(0, 5).map(item => item.main.temp);

        // Initialize Chart.js
        const ctx = document.getElementById("tempChart").getContext("2d");
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Temperature (°C)',
                    data: temps,
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.2
                }]
            }
        });
    } catch (error) {
        document.getElementById("weatherContainer").innerHTML = `<p>Error fetching data. Please try again.</p>`;
        console.error("Error fetching weather data:", error);
    }
}

